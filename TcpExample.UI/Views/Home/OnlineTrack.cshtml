
@{
    ViewData["Title"] = "OnlineTrack";
    Layout = "~/Views/Shared/_AdminLTE.cshtml";
}
@model List<TcpExample.Domain.DBModel.DataCollection>

<script language="JavaScript" src="https://cdn.datatables.net/1.10.4/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script language="JavaScript" src="https://cdn.datatables.net/plug-ins/3cfcc339e89/integration/bootstrap/3/dataTables.bootstrap.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">

<link rel="stylesheet" type="text/css" href="http://cdn.datatables.net/plug-ins/3cfcc339e89/integration/bootstrap/3/dataTables.bootstrap.css">

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>
<script>
    var data = [];
    var interactive_plot;
    var connection = new signalR.HubConnectionBuilder().withUrl("/dataHub").build();
    connection.start().then(function () {
        var markCode = "@ViewBag.Device.Mark.Code";
        var SerialNumber = "@ViewBag.Device.SerialNumber";
        connection.invoke("getDeviceActivities", markCode, SerialNumber).catch(function (err) {
             console.log(err.toString());
        });
    }).catch(function (err) {
        return console.error(err.toString());
    });
    connection.on("ReceiveMessage", function (mark, serialNumber, signal, dateTime) {
        // if (data.length > 0)
        //    data = data.slice(1)
        //console.log(data);
       
        var j;
        for (j=99; j >=0; j--)
        {
          if (j == 0) {
                data[0]=[j, parseInt(signal)]
            }
            else {
                data[j] =[j,data[j - 1][1]];
            }
        }
        //var newdata = data;
       // console.log(data);



       interactive_plot.setData([data]);
        interactive_plot.setupGrid(); //only necessary if your new data will change the axes or grid
        interactive_plot.draw();
       // update();
       //alert(mark + ' ' + serialNumber + ' ' + signal + ' ' + dateTime);
    });
</script>

<style>
    #datatable td {
        text-align: center;
        vertical-align: middle;
    }

    .pagination > li {
        display: inline;
        padding: 0px !important;
        margin: 0px !important;
        border: none !important;
    }

    .modal-backdrop {
        z-index: -1 !important;
    }
    /*
    Fix to show in full screen demo
    */
    iframe {
        height: 700px !important;
    }

    .btn {
        display: inline-block;
        padding: 6px 12px !important;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .btn-primary {
        color: #fff !important;
        background: #428bca !important;
        border-color: #357ebd !important;
        box-shadow: none !important;
    }

    .btn-danger {
        color: #fff !important;
        background: #d9534f !important;
        border-color: #d9534f !important;
        box-shadow: none !important;
    }
</style>


<div class="row">
    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-aqua"><i class="ion ion-ios-gear-outline"></i></span>

            <div class="info-box-content">
                <span class="info-box-text">Mark</span>
                <span class="info-box-number">@ViewBag.Device.Mark.Name</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-red"><i class="fa fa-google-plus"></i></span>

            <div class="info-box-content">
                <span class="info-box-text">Serial Number</span>
                <span class="info-box-number">@ViewBag.Device.SerialNumber</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
    <!-- fix for small devices only -->
    <div class="clearfix visible-sm-block"></div>

    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-green"><i class="ion ion-ios-cart-outline"></i></span>

            <div class="info-box-content">
                <span class="info-box-text">Ip Address</span>
                <span class="info-box-number">@ViewBag.Device.IpAddress</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-yellow"><i class="ion ion-ios-people-outline"></i></span>

            <div class="info-box-content">
                <span class="info-box-text">Port </span>
                <span class="info-box-number">@ViewBag.Device.Port</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
</div>
<div class="row">
    <div class="col-md-6 col-sm-6 col-xs-12">
        <table id="datatable" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
                <tr>

                    <th>Signal</th>
                    <th>Recive Date</th>
                </tr>
            </thead>

            <tfoot>
                <tr>

                    <th>Signal</th>
                    <th>Recive Date</th>
                </tr>
            </tfoot>

            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>

                            <td>@item.Signal</td>
                            <td>@item.DateCreated</td>

                        </tr>
                    }
                }

            </tbody>
        </table>

    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <i class="fa fa-bar-chart-o"></i>

                <h3 class="box-title">Interactive Area Chart</h3>

                <div class="box-tools pull-right">
                    Real time
                    <div class="btn-group" id="realtime" data-toggle="btn-toggle">
                        <button type="button" class="btn btn-default btn-xs active" data-toggle="on">On</button>
                        <button type="button" class="btn btn-default btn-xs" data-toggle="off">Off</button>
                    </div>
                </div>
            </div>
            <div class="box-body">
                <div id="interactive" style="height: 300px;"></div>
            </div>
            <!-- /.box-body-->
        </div>
    </div>
</div>

<script src="/AdminLTE/bower_components/Flot/jquery.flot.js"></script>
<!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
<script src="/AdminLTE/bower_components/Flot/jquery.flot.resize.js"></script>
<!-- FLOT PIE PLUGIN - also used to draw donut charts -->
<script src="/AdminLTE/bower_components/Flot/jquery.flot.pie.js"></script>
<!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
<script src="/AdminLTE/bower_components/Flot/jquery.flot.categories.js"></script>


<script>
    var curentcount = 0;
     @if (Model != null && Model.Count > 0)
     {
         for (var i= 0;i < 100;i++)
        {
             if (i >= Model.Count)
             {
                 @:data.push([data.length, 0]);

             }
             else {
                @:data.push([data.length,@Model[i].Signal]);
                @:curentcount++;
             }

         }
     }
    $(document).ready(function () {
        $('#datatable').dataTable({ "order": [[1, "desc"]] });

        $("[data-toggle=tooltip]").tooltip();

     });


    $(function () {
        /*
         * Flot Interactive Chart
         * -----------------------
         */
        // We use an inline data source in the example, usually data would
        // be fetched from a server
        //var data = [],
        var totalPoints = 100

        function getRandomData() {

         if (data.length > 0)
             data = data.slice(1)

            // Do a random walk
         while (data.length < totalPoints) {

             var prev = data.length > 0 ? data[data.length - 1] : 50,
                 y = prev + Math.random() * 10 - 5

                if (y < 0) {
                 y = 0
                } else if (y > 100) {
                 y = 100
                }

             data.push(y)
            }

         // Zip the generated y values with the x values
         var res = []
            for (var i = 0; i < data.length; ++i) {
             res.push([i, data[i]])
            }
            //var res = 15;
            return res
        }

         interactive_plot = $.plot('#interactive', [data], {
     grid: {
         borderColor: '#f3f3f3',
                borderWidth: 1,
                tickColor: '#f3f3f3'
            },
            series: {
         shadowSize: 0, // Drawing is faster without shadows
                color: '#3c8dbc'
            },
            lines: {
         fill: true, //Converts the line chart to area chart
                color: '#3c8dbc'
            },
            yaxis: {
         min: 0,
                max: 100,
                show: true
            },
            xaxis: {
         show: true
            }
     })

        var updateInterval = 500 //Fetch data ever x milliseconds
        var realtime = 'off' //If == to on then fetch data every x seconds. else stop fetching
        function update() {

            interactive_plot.setData([data])

            // Since the axes don't change, we don't need to call plot.setupGrid()
            interactive_plot.draw()
            if (realtime === 'on')
             setTimeout(update, updateInterval)
        }

        //INITIALIZE REALTIME DATA FETCHING
        if (realtime === 'on') {
            update()
        }
        //REALTIME TOGGLE
        $('#realtime .btn').click(function () {
         if ($(this).data('toggle') === 'on') {
             realtime = 'on'
            }
            else {
             realtime = 'off'
            }
         update()
        })
        /*
         * END INTERACTIVE CHART
         */



    })
</script>